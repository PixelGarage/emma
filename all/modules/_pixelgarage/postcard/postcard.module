<?php
/**
* @file
* A description of what your module does.
*/

//
// implements a multi-step webform with anonymous access rights
require_once 'includes/webform.multistep.inc';

//
// implements webform submission mail alteration (token replacements)
//require_once 'includes/webform.mail.inc';



/* --------------------------------------------------
 * Postcard session data
 * --------------------------------------------------*/
/**
 * Session wide data container.
 *
 * @return array Returns the session data array.
 */
function &postcard_session_data() {
  if (!isset($_SESSION['postcard'])) {
    $_SESSION['postcard'] = array();
  }
  return $_SESSION['postcard'];
}


/* --------------------------------------------------
 * Postcard hook implementations
 * --------------------------------------------------*/

/**
 * Implements hook_menu().
 *
 * Define the postcard menu as top node of the admin menu.
 * All administration of the PxlTrade latform is added below this menu.
 * @return mixed
 */
function postcard_menu() {
  //
  // view / edit / delete webform submission by anonymous user (submission token needed)
  $items['postcard/%postcard_menu/submission/%postcard_menu_submission/anonym_view'] = array(
    'title' => 'View',
    'load arguments' => array(1),
    'page callback' => 'webform_submission_page',
    'page arguments' => array(1, 3, 'html'),
    'access callback' => 'postcard_anonym_submission_access',
    'access arguments' => array(1, 3, 'anonym_view'),
    'weight' => 0,
    'file path' => drupal_get_path('module', 'webform'),
    'file' => 'includes/webform.submissions.inc',
    'type' => MENU_CALLBACK,
  );
  $items['postcard/%postcard_menu/submission/%postcard_menu_submission/anonym_edit'] = array(
    'title' => 'Edit',
    'load arguments' => array(1),
    'page callback' => 'webform_submission_page',
    'page arguments' => array(1, 3, 'form'),
    'access callback' => 'postcard_anonym_submission_access',
    'access arguments' => array(1, 3, 'anonym_edit'),
    'weight' => 1,
    'file path' => drupal_get_path('module', 'webform'),
    'file' => 'includes/webform.submissions.inc',
    'type' => MENU_CALLBACK,
  );
  $items['postcard/%postcard_menu/submission/%postcard_menu_submission/anonym_remove'] = array(
    'title' => 'Remove',
    'load arguments' => array(1),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('postcard_webform_submission_remove_form', 1, 3),
    'access callback' => 'postcard_anonym_submission_access',
    'access arguments' => array(1, 3, 'anonym_delete'),
    'weight' => 2,
    'file' => 'includes/webform.submission.inc',
    'type' => MENU_CALLBACK,
  );

  return $items;
}

/**
 * Menu loader callback. Load a webform node if the given nid is a webform.
 */
function postcard_menu_load($nid) {
  if (!is_numeric($nid)) {
    return FALSE;
  }
  $node = node_load($nid);
  if (!isset($node->type) || !variable_get('webform_node_' . $node->type, FALSE)) {
    return FALSE;
  }
  return postcard_webform_master_form($node);
}

/**
 * Menu loader callback. Load a webform submission of the given webform, if the given sid is valid.
 */
function postcard_menu_submission_load($sid, $nid) {
  // load webform submission includes
  module_load_include('inc', 'webform', 'includes/webform.submissions');

  //
  // get the submission of the webform
  $node = node_load($nid);
  $master = postcard_webform_master_form($node);
  $submission = webform_get_submission($master->nid, $sid);
  return !empty($submission) ? $submission : false;
}

/**
 * Allows to view, edit or delete submissions, if anonymous user token is correct.
 */
function postcard_anonym_submission_access($node, $submission, $op = 'anonym_view', $account = NULL) {
  $anonymous_access = $submission && isset($_GET['token']) &&
    $_GET['token'] == webform_get_submission_access_token($submission);
  switch ($op) {
    case 'anonym_view':
    case 'anonym_edit':
    case 'anonym_delete':
      return $anonymous_access;
  }
  return false;
}




/* --------------------------------------------------
 * Postcard helpers
 * --------------------------------------------------*/
/**
 * Gets the master webform of a webform.
 * Used for webforms, which are localized by string to access all webform related data,
 * e.g. submissions, components etc. which are only available on the master.
 *
 * @param   $node   object
 *    The webform node (translated or master webform node)
 * @return  bool|mixed
 *    Returns the master webform or false, if not found.
 */
function postcard_webform_master_form($node) {
  // if integer, load node first
  $tnid = $node->tnid ? $node->tnid : $node->nid;
  return node_load($tnid);
}

/**
 * Creates a HTML link to a specific submission, that can be access by an anonymous user.
 * The created link is language dependent, meaning the translated form is opened.
 * If html flag is set to false, a plain text url is returned.
 *
 * @param $nid   int
 *    The master webform node id
 * @param $sid   int
 *    The submission id
 * @param $op   string
 *    Operation to be performed on submission, e.g. anonym_view, anonym_edit, anonym_delete
 * @return string
 *    HTML or plain text string containing a link to the submission accessible by anonymous users.
 */
function postcard_create_anonym_submission_link($nid, $sid, $op, $html = true, $title = false) {
  global $language;

  $node = node_load($nid);
  $master = postcard_webform_master_form($node);
  $submission = webform_get_submission($master->nid, $sid);
  $token = webform_get_submission_access_token($submission);
  $lang_nid = translation_node_get_translations($master->nid)[$language->language]['nid'];
  $url = "postcard/{$lang_nid}/submission/{$sid}/" . $op;

  // create html or text link
  if ($html) {
    $text = $title ? t($title) : t('Back');
    return l($text, $url, array('query' => array('token' => $token)));
  }
  else {
    return $url . '/?token=' . $token;
  }

}


